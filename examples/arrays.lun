const
    null = fn () {},
    tail = fn () {
        declare
            item = null,
            next
        const set = fn (index, value) {
                if !next then next = tail()

                if index == 0
                    then item = value
                    else next(false)(index - 1, value)
            },
            get = fn (index)
                if index == 0
                    then item
                    else next(true)(index - 1)

        # Return:
        fn (_get) if _get then get else set
    },
    array = fn (length) {
        declare
            item,
            next = if length == 1
                then tail()
                else array(length - 1)
            const set = fn (index, value)
                if index == 0
                    then item = value
                    else next(false)(index - 1, value),
            get = fn (index)
                if index == 0
                    then item
                    else next(true)(index - 1)

        # Return:
        fn (_get) if _get then get else set
    },
    getter = fn (array) fn (index) array(true)(index),
    setter = fn (array) fn (index, value) array(false)(index, value),
    pusher = fn (array) {
        const
            get = getter(array),
            set = setter(array),
            push = fn (index, value) {
                if get(index) == null
                    then set(index, value)
                    else push(index + 1, value)
            }

        fn (value) push (0, value)
    },
    iterator = fn (array) {
        const
            get = getter(array),
            iterate = fn (index, callback) {
                const item = get(index)

                if item != null then {
                    callback(item)
                    iterate(index + 1, callback)
                }
            }

        fn (callback) iterate(0, callback)
    }

const
    test = array(2),
    set = setter(test),
    iterate = iterator(test),
    push = pusher(test)

set(0, 4)
set(1, 7)
iterate(println)

const num = randomInt(0 100)

println('pushing: ', num)
num |> push

iterate(println)

